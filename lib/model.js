'use strict';

var necessary = require('necessary'),
    sufficient = require('sufficient');

var uris = require('../bin/uris'); ///

var UPDATE_URI = uris.UPDATE_URI,
    INITIALISE_URI = uris.INITIALISE_URI,
    miscellaneousUtilities = necessary.miscellaneousUtilities,
    Scheduler = sufficient.Scheduler,
    AsynchronousTask = sufficient.AsynchronousTask,
    post = miscellaneousUtilities.post;


var host = '',
    ///
scheduler = Scheduler.fromNothing();

function update(content, callback) {
  var updateAsynchronousTask = new AsynchronousTask(function (callback) {
    var uri = UPDATE_URI,
        json = {};

    post(host, uri, json, function (json) {
      callback(content);
    });
  }, callback);

  scheduler.executeTaskImmediately(updateAsynchronousTask);
}

function initialise(done) {
  var initialiseAsynchronousTask = new AsynchronousTask(function (done) {
    var uri = INITIALISE_URI,
        json = {};

    post(host, uri, json, function (json) {
      done();
    });
  }, done);

  scheduler.addTaskToQueue(initialiseAsynchronousTask);
}

module.exports = {
  update: update,
  initialise: initialise
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9tb2RlbC5qcyJdLCJuYW1lcyI6WyJuZWNlc3NhcnkiLCJyZXF1aXJlIiwic3VmZmljaWVudCIsInVyaXMiLCJVUERBVEVfVVJJIiwiSU5JVElBTElTRV9VUkkiLCJtaXNjZWxsYW5lb3VzVXRpbGl0aWVzIiwiU2NoZWR1bGVyIiwiQXN5bmNocm9ub3VzVGFzayIsInBvc3QiLCJob3N0Iiwic2NoZWR1bGVyIiwiZnJvbU5vdGhpbmciLCJ1cGRhdGUiLCJjb250ZW50IiwiY2FsbGJhY2siLCJ1cGRhdGVBc3luY2hyb25vdXNUYXNrIiwidXJpIiwianNvbiIsImV4ZWN1dGVUYXNrSW1tZWRpYXRlbHkiLCJpbml0aWFsaXNlIiwiZG9uZSIsImluaXRpYWxpc2VBc3luY2hyb25vdXNUYXNrIiwiYWRkVGFza1RvUXVldWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxZQUFZQyxRQUFRLFdBQVIsQ0FBbEI7QUFBQSxJQUNNQyxhQUFhRCxRQUFRLFlBQVIsQ0FEbkI7O0FBR0EsSUFBTUUsT0FBT0YsUUFBUSxhQUFSLENBQWIsQyxDQUFzQzs7SUFFOUJHLFUsR0FBK0JELEksQ0FBL0JDLFU7SUFBWUMsYyxHQUFtQkYsSSxDQUFuQkUsYztJQUNaQyxzQixHQUEyQk4sUyxDQUEzQk0sc0I7SUFDQUMsUyxHQUFnQ0wsVSxDQUFoQ0ssUztJQUFXQyxnQixHQUFxQk4sVSxDQUFyQk0sZ0I7SUFDWEMsSSxHQUFTSCxzQixDQUFURyxJOzs7QUFFUixJQUFNQyxPQUFPLEVBQWI7QUFBQSxJQUFrQjtBQUNaQyxZQUFZSixVQUFVSyxXQUFWLEVBRGxCOztBQUdBLFNBQVNDLE1BQVQsQ0FBZ0JDLE9BQWhCLEVBQXlCQyxRQUF6QixFQUFtQztBQUNqQyxNQUFNQyx5QkFBeUIsSUFBSVIsZ0JBQUosQ0FBcUIsVUFBU08sUUFBVCxFQUFtQjtBQUNyRSxRQUFNRSxNQUFNYixVQUFaO0FBQUEsUUFDTWMsT0FBTyxFQURiOztBQUdBVCxTQUFLQyxJQUFMLEVBQVdPLEdBQVgsRUFBZ0JDLElBQWhCLEVBQXNCLFVBQVNBLElBQVQsRUFBZTtBQUNuQ0gsZUFBU0QsT0FBVDtBQUNELEtBRkQ7QUFHRCxHQVA4QixFQU81QkMsUUFQNEIsQ0FBL0I7O0FBU0FKLFlBQVVRLHNCQUFWLENBQWlDSCxzQkFBakM7QUFDRDs7QUFHRCxTQUFTSSxVQUFULENBQW9CQyxJQUFwQixFQUEwQjtBQUN4QixNQUFNQyw2QkFBNkIsSUFBSWQsZ0JBQUosQ0FBcUIsVUFBU2EsSUFBVCxFQUFlO0FBQ3JFLFFBQU1KLE1BQU1aLGNBQVo7QUFBQSxRQUNNYSxPQUFPLEVBRGI7O0FBR0FULFNBQUtDLElBQUwsRUFBV08sR0FBWCxFQUFnQkMsSUFBaEIsRUFBc0IsVUFBU0EsSUFBVCxFQUFlO0FBQ25DRztBQUNELEtBRkQ7QUFHRCxHQVBrQyxFQU9oQ0EsSUFQZ0MsQ0FBbkM7O0FBU0FWLFlBQVVZLGNBQVYsQ0FBeUJELDBCQUF6QjtBQUNEOztBQUVERSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZaLGdCQURlO0FBRWZPO0FBRmUsQ0FBakIiLCJmaWxlIjoibW9kZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IG5lY2Vzc2FyeSA9IHJlcXVpcmUoJ25lY2Vzc2FyeScpLFxuICAgICAgc3VmZmljaWVudCA9IHJlcXVpcmUoJ3N1ZmZpY2llbnQnKTtcblxuY29uc3QgdXJpcyA9IHJlcXVpcmUoJy4uL2Jpbi91cmlzJyk7ICAvLy9cblxuY29uc3QgeyBVUERBVEVfVVJJLCBJTklUSUFMSVNFX1VSSSB9ID0gdXJpcyxcbiAgICAgIHsgbWlzY2VsbGFuZW91c1V0aWxpdGllcyB9ID0gbmVjZXNzYXJ5LFxuICAgICAgeyBTY2hlZHVsZXIsIEFzeW5jaHJvbm91c1Rhc2sgfSA9IHN1ZmZpY2llbnQsXG4gICAgICB7IHBvc3QgfSA9IG1pc2NlbGxhbmVvdXNVdGlsaXRpZXM7XG5cbmNvbnN0IGhvc3QgPSAnJywgIC8vL1xuICAgICAgc2NoZWR1bGVyID0gU2NoZWR1bGVyLmZyb21Ob3RoaW5nKCk7XG5cbmZ1bmN0aW9uIHVwZGF0ZShjb250ZW50LCBjYWxsYmFjaykge1xuICBjb25zdCB1cGRhdGVBc3luY2hyb25vdXNUYXNrID0gbmV3IEFzeW5jaHJvbm91c1Rhc2soZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBjb25zdCB1cmkgPSBVUERBVEVfVVJJLFxuICAgICAgICAgIGpzb24gPSB7fTtcblxuICAgIHBvc3QoaG9zdCwgdXJpLCBqc29uLCBmdW5jdGlvbihqc29uKSB7XG4gICAgICBjYWxsYmFjayhjb250ZW50KTtcbiAgICB9KTtcbiAgfSwgY2FsbGJhY2spO1xuXG4gIHNjaGVkdWxlci5leGVjdXRlVGFza0ltbWVkaWF0ZWx5KHVwZGF0ZUFzeW5jaHJvbm91c1Rhc2spO1xufVxuXG5cbmZ1bmN0aW9uIGluaXRpYWxpc2UoZG9uZSkge1xuICBjb25zdCBpbml0aWFsaXNlQXN5bmNocm9ub3VzVGFzayA9IG5ldyBBc3luY2hyb25vdXNUYXNrKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICBjb25zdCB1cmkgPSBJTklUSUFMSVNFX1VSSSxcbiAgICAgICAgICBqc29uID0ge307XG5cbiAgICBwb3N0KGhvc3QsIHVyaSwganNvbiwgZnVuY3Rpb24oanNvbikge1xuICAgICAgZG9uZSgpO1xuICAgIH0pO1xuICB9LCBkb25lKTtcblxuICBzY2hlZHVsZXIuYWRkVGFza1RvUXVldWUoaW5pdGlhbGlzZUFzeW5jaHJvbm91c1Rhc2spO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdXBkYXRlLFxuICBpbml0aWFsaXNlXG59O1xuIl19
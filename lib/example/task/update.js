'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sufficient = require('sufficient');

var poster = require('../poster'),
    UpdateRequest = require('../request/update'),
    UpdateResponse = require('../response/update'),
    generateOperations = require('../../operations/generate');

var updatePost = poster.updatePost,
    AsynchronousTask = sufficient.AsynchronousTask;

var UpdateTask = function (_AsynchronousTask) {
  _inherits(UpdateTask, _AsynchronousTask);

  function UpdateTask(userIdentifier, sessionIdentifier, workingContent, editableContent, callback) {
    _classCallCheck(this, UpdateTask);

    return _possibleConstructorReturn(this, (UpdateTask.__proto__ || Object.getPrototypeOf(UpdateTask)).call(this, asynchronousMethod, userIdentifier, sessionIdentifier, workingContent, editableContent, callback));
  }

  return UpdateTask;
}(AsynchronousTask);

module.exports = UpdateTask;

function asynchronousMethod(userIdentifier, sessionIdentifier, workingContent, editableContent, callback) {
  var operations = generateOperations(workingContent, editableContent),
      updateRequest = UpdateRequest.fromOperationsUserIdentifierAndSessionIdentifier(operations, userIdentifier, sessionIdentifier),
      json = updateRequest.toJSON();

  updatePost(json, function (json) {
    var updateResponse = UpdateResponse.fromJSON(json),
        sessionExpired = updateResponse.getSessionExpired(),
        pendingOperations = updateResponse.getPendingOperations();

    callback(sessionExpired, pendingOperations);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9leGFtcGxlL3Rhc2svdXBkYXRlLmpzIl0sIm5hbWVzIjpbInN1ZmZpY2llbnQiLCJyZXF1aXJlIiwicG9zdGVyIiwiVXBkYXRlUmVxdWVzdCIsIlVwZGF0ZVJlc3BvbnNlIiwiZ2VuZXJhdGVPcGVyYXRpb25zIiwidXBkYXRlUG9zdCIsIkFzeW5jaHJvbm91c1Rhc2siLCJVcGRhdGVUYXNrIiwidXNlcklkZW50aWZpZXIiLCJzZXNzaW9uSWRlbnRpZmllciIsIndvcmtpbmdDb250ZW50IiwiZWRpdGFibGVDb250ZW50IiwiY2FsbGJhY2siLCJhc3luY2hyb25vdXNNZXRob2QiLCJtb2R1bGUiLCJleHBvcnRzIiwib3BlcmF0aW9ucyIsInVwZGF0ZVJlcXVlc3QiLCJmcm9tT3BlcmF0aW9uc1VzZXJJZGVudGlmaWVyQW5kU2Vzc2lvbklkZW50aWZpZXIiLCJqc29uIiwidG9KU09OIiwidXBkYXRlUmVzcG9uc2UiLCJmcm9tSlNPTiIsInNlc3Npb25FeHBpcmVkIiwiZ2V0U2Vzc2lvbkV4cGlyZWQiLCJwZW5kaW5nT3BlcmF0aW9ucyIsImdldFBlbmRpbmdPcGVyYXRpb25zIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQSxJQUFNQSxhQUFhQyxRQUFRLFlBQVIsQ0FBbkI7O0FBRUEsSUFBTUMsU0FBU0QsUUFBUSxXQUFSLENBQWY7QUFBQSxJQUNNRSxnQkFBZ0JGLFFBQVEsbUJBQVIsQ0FEdEI7QUFBQSxJQUVNRyxpQkFBaUJILFFBQVEsb0JBQVIsQ0FGdkI7QUFBQSxJQUdNSSxxQkFBcUJKLFFBQVEsMkJBQVIsQ0FIM0I7O0FBS00sSUFBRUssVUFBRixHQUFpQkosTUFBakIsQ0FBRUksVUFBRjtBQUFBLElBQ0VDLGdCQURGLEdBQ3VCUCxVQUR2QixDQUNFTyxnQkFERjs7SUFHQUMsVTs7O0FBQ0osc0JBQVlDLGNBQVosRUFBNEJDLGlCQUE1QixFQUErQ0MsY0FBL0MsRUFBK0RDLGVBQS9ELEVBQWdGQyxRQUFoRixFQUEwRjtBQUFBOztBQUFBLG1IQUNsRkMsa0JBRGtGLEVBQzlETCxjQUQ4RCxFQUM5Q0MsaUJBRDhDLEVBQzNCQyxjQUQyQixFQUNYQyxlQURXLEVBQ01DLFFBRE47QUFFekY7OztFQUhzQk4sZ0I7O0FBTXpCUSxPQUFPQyxPQUFQLEdBQWlCUixVQUFqQjs7QUFFQSxTQUFTTSxrQkFBVCxDQUE0QkwsY0FBNUIsRUFBNENDLGlCQUE1QyxFQUErREMsY0FBL0QsRUFBK0VDLGVBQS9FLEVBQWdHQyxRQUFoRyxFQUEwRztBQUN4RyxNQUFNSSxhQUFhWixtQkFBbUJNLGNBQW5CLEVBQW1DQyxlQUFuQyxDQUFuQjtBQUFBLE1BQ01NLGdCQUFnQmYsY0FBY2dCLGdEQUFkLENBQStERixVQUEvRCxFQUEyRVIsY0FBM0UsRUFBMkZDLGlCQUEzRixDQUR0QjtBQUFBLE1BRU1VLE9BQU9GLGNBQWNHLE1BQWQsRUFGYjs7QUFJQWYsYUFBV2MsSUFBWCxFQUFpQixVQUFTQSxJQUFULEVBQWU7QUFDOUIsUUFBTUUsaUJBQWlCbEIsZUFBZW1CLFFBQWYsQ0FBd0JILElBQXhCLENBQXZCO0FBQUEsUUFDQ0ksaUJBQWlCRixlQUFlRyxpQkFBZixFQURsQjtBQUFBLFFBRU1DLG9CQUFvQkosZUFBZUssb0JBQWYsRUFGMUI7O0FBSUFkLGFBQVNXLGNBQVQsRUFBeUJFLGlCQUF6QjtBQUNELEdBTkQ7QUFPRCIsImZpbGUiOiJ1cGRhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHN1ZmZpY2llbnQgPSByZXF1aXJlKCdzdWZmaWNpZW50Jyk7XG5cbmNvbnN0IHBvc3RlciA9IHJlcXVpcmUoJy4uL3Bvc3RlcicpLFxuICAgICAgVXBkYXRlUmVxdWVzdCA9IHJlcXVpcmUoJy4uL3JlcXVlc3QvdXBkYXRlJyksXG4gICAgICBVcGRhdGVSZXNwb25zZSA9IHJlcXVpcmUoJy4uL3Jlc3BvbnNlL3VwZGF0ZScpLFxuICAgICAgZ2VuZXJhdGVPcGVyYXRpb25zID0gcmVxdWlyZSgnLi4vLi4vb3BlcmF0aW9ucy9nZW5lcmF0ZScpO1xuXG5jb25zdCB7IHVwZGF0ZVBvc3QgfSA9IHBvc3RlcixcbiAgICAgIHsgQXN5bmNocm9ub3VzVGFzayB9ID0gc3VmZmljaWVudDtcblxuY2xhc3MgVXBkYXRlVGFzayBleHRlbmRzIEFzeW5jaHJvbm91c1Rhc2sge1xuICBjb25zdHJ1Y3Rvcih1c2VySWRlbnRpZmllciwgc2Vzc2lvbklkZW50aWZpZXIsIHdvcmtpbmdDb250ZW50LCBlZGl0YWJsZUNvbnRlbnQsIGNhbGxiYWNrKSB7XG4gICAgc3VwZXIoYXN5bmNocm9ub3VzTWV0aG9kLCB1c2VySWRlbnRpZmllciwgc2Vzc2lvbklkZW50aWZpZXIsIHdvcmtpbmdDb250ZW50LCBlZGl0YWJsZUNvbnRlbnQsIGNhbGxiYWNrKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVXBkYXRlVGFzaztcblxuZnVuY3Rpb24gYXN5bmNocm9ub3VzTWV0aG9kKHVzZXJJZGVudGlmaWVyLCBzZXNzaW9uSWRlbnRpZmllciwgd29ya2luZ0NvbnRlbnQsIGVkaXRhYmxlQ29udGVudCwgY2FsbGJhY2spIHtcbiAgY29uc3Qgb3BlcmF0aW9ucyA9IGdlbmVyYXRlT3BlcmF0aW9ucyh3b3JraW5nQ29udGVudCwgZWRpdGFibGVDb250ZW50KSxcbiAgICAgICAgdXBkYXRlUmVxdWVzdCA9IFVwZGF0ZVJlcXVlc3QuZnJvbU9wZXJhdGlvbnNVc2VySWRlbnRpZmllckFuZFNlc3Npb25JZGVudGlmaWVyKG9wZXJhdGlvbnMsIHVzZXJJZGVudGlmaWVyLCBzZXNzaW9uSWRlbnRpZmllciksXG4gICAgICAgIGpzb24gPSB1cGRhdGVSZXF1ZXN0LnRvSlNPTigpO1xuXG4gIHVwZGF0ZVBvc3QoanNvbiwgZnVuY3Rpb24oanNvbikge1xuICAgIGNvbnN0IHVwZGF0ZVJlc3BvbnNlID0gVXBkYXRlUmVzcG9uc2UuZnJvbUpTT04oanNvbiksXG5cdFx0XHRcdFx0c2Vzc2lvbkV4cGlyZWQgPSB1cGRhdGVSZXNwb25zZS5nZXRTZXNzaW9uRXhwaXJlZCgpLFxuICAgICAgICAgIHBlbmRpbmdPcGVyYXRpb25zID0gdXBkYXRlUmVzcG9uc2UuZ2V0UGVuZGluZ09wZXJhdGlvbnMoKTtcblxuICAgIGNhbGxiYWNrKHNlc3Npb25FeHBpcmVkLCBwZW5kaW5nT3BlcmF0aW9ucyk7XG4gIH0pO1xufVxuIl19